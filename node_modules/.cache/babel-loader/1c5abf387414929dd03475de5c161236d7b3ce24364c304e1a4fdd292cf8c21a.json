{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/my-app/src/components/body.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Input from './inputs';\nimport Navbar from './navbar';\nimport Options from './Options';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Body = () => {\n  _s();\n  // State for Stuffs\n  const [stuffs, setStuffs] = useState([{\n    id: 0,\n    value: \"Beverages\",\n    count: 0\n  }, {\n    id: 1,\n    value: \"Perfumes\",\n    count: 0\n  }, {\n    id: 2,\n    value: \"Breads\",\n    count: 0\n  }, {\n    id: 3,\n    value: \"Sardine\",\n    count: 0\n  }]);\n\n  //  State for Input \n  const [input, setInput] = useState('');\n  const handleDelete = id => {\n    const newStuffs = stuffs.filter(stuff => stuff.id !== id);\n    setStuffs(newStuffs);\n  };\n  const [total, setTotal] = useState(0);\n  const totalCount = () => {};\n\n  //  -> loop through stuffs, get all counts and add to a variable at the top... :)\n\n  //  Function for Adding new stuffs && Handles Submission of form in Input.jsx \n  const handleSubmit = e => {\n    e.preventDefault();\n    const oldId = stuffs.length > 0 ? stuffs[stuffs.length - 1].id : 0;\n    const newId = oldId + 1;\n    setStuffs(stuffs.concat({\n      id: newId,\n      value: input,\n      count: 0\n    }));\n    console.log(newId);\n    setInput('');\n    stuffs.map(stuff => {\n      const counts = stuff.count;\n      setTotal(total + counts);\n    });\n    console.log(total);\n  };\n  const handleChange = value => {\n    setInput(value);\n    console.log(input);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" form-control p-2 m-2\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      handleSubmit: handleSubmit,\n      handleChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), stuffs.map(stuff => /*#__PURE__*/_jsxDEV(Options, {\n      stuff: stuff,\n      input: input,\n      handleDelete: handleDelete\n    }, stuff.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }, this)), stuffs.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There are no Stuffs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 4\n  }, this);\n};\n_s(Body, \"FfowCY7wc0EZr3536dhYR3yD0AY=\");\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","useState","Input","Navbar","Options","Body","stuffs","setStuffs","id","value","count","input","setInput","handleDelete","newStuffs","filter","stuff","total","setTotal","totalCount","handleSubmit","e","preventDefault","oldId","length","newId","concat","console","log","map","counts","handleChange"],"sources":["/Users/mac/Documents/my-app/src/components/body.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Input from './inputs';\nimport Navbar from './navbar';\nimport Options from './Options';\n\nconst Body = () => {\n\n  // State for Stuffs\n\tconst [stuffs, setStuffs] = \n   useState([\n      {id:0, value: \"Beverages\", count: 0}, \n      {id:1, value: \"Perfumes\", count: 0}, \n      {id:2, value: \"Breads\", count: 0},\n      {id: 3, value: \"Sardine\", count:0}\n   ]);\n\n  //  State for Input \n   const [input, setInput] = useState('');\n\n   const handleDelete = id => {\n    const newStuffs = stuffs.filter(stuff => stuff.id !== id);\n    setStuffs(newStuffs)\n   }\n\n   const [total, setTotal] = useState(0); \n\n   const totalCount = () => {\n    \n   }\n\n  //  -> loop through stuffs, get all counts and add to a variable at the top... :)\n\n  //  Function for Adding new stuffs && Handles Submission of form in Input.jsx \n   const handleSubmit = (e) => {\n    e.preventDefault();\n    const oldId = stuffs.length > 0 ? stuffs[stuffs.length - 1].id : 0\n    const newId = (oldId + 1);\n    setStuffs(stuffs.concat({\n      id: newId, \n      value: input, \n      count: 0\n    }));\n    console.log(newId);\n    setInput('');\n    stuffs.map(\n      (stuff) => {\n        const counts = stuff.count;\n        setTotal(total + counts);\n      }\n    );\n    console.log(total)\n  }\n\n  const handleChange = (value) => {\n    setInput(value);\n    console.log(input);\n  }\n\n\t\treturn(\n\t\t\t<div className=' form-control p-2 m-2'>\n\t\t\t\t<Navbar/>\n        <Input \n          handleSubmit={handleSubmit}\n          handleChange={handleChange}\n        />\n\t\t\t\t{stuffs.map(stuff => \n          <Options \n            key={stuff.id} \n            stuff={stuff}\n            input={input}\n            handleDelete={handleDelete}\n          />\n          )}\n        {/* <input\n          type=\"button\" \n          className='btn btn-danger btn-sm'\n          value=\"Click\" \n          onClick={handleSubmit} \n        /> */}\n        {stuffs.length === 0 && <p>There are no Stuffs</p>}\n\t\t\t</div>\n\t\t);\n}\n\nexport default Body;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}